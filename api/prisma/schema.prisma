// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin{
  id String @id
  username String @unique
  email String @unique
  password String
}

model Student{
  id String @id
  username String @unique
  name String
  surname String
  email String?
  phone String
  address  String
  img String?
  sex UserSex
  createdAd DateTime @default(now())
  groupId Int
  group Group @relation(fields: [groupId], references: [id])
  parentId String
  parent Parent @relation(fields: [parentId], references: [id])
  gradeId Int
  grade Grade @relation(fields: [gradeId], references: [id])
}

model Parent{
  id String @id
  username String @unique
  name String
  surname String
  email String?
  phone String
  address  String
  img String?
  createdAd DateTime @default(now())
  students Student[]
}
model Teacher{
  id String @id
  username String @unique
  name String
  surname String
  email String?
  phone String
  address  String
  img String?
  sex UserSex
  createdAd DateTime @default(now())
  subjects Subject[]
  lessons Lesson[]
  groups Group[]
}

model Grade{
  id Int @id @default(autoincrement())  
  level String @unique
  students Student[]
}
model Group{
  id Int @id @default(autoincrement())  
  name String @unique
  capacity Int
  lessons Lesson []
  supervisorId String
  supervisor Teacher @relation(fields: [supervisorId], references: [id])
  students Student[]
}
model Subject{
  id Int @id @default(autoincrement())  
  name String @unique
  teachers Teacher[]
  lessons Lesson[]
}
model Lesson{
  id Int @id @default(autoincrement())  
  name String
  day Day
  startTime DateTime
  endTime DateTime
  classId Int
  class Group @relation(fields: [classId], references: [id])
  subjectId Int
  subject Subject @relation(fields: [subjectId], references: [id])
  teacherId String
  teacher Teacher @relation(fields: [teacherId], references: [id])
}

// model Exam{
  
// }
// model Assignment{
  
// }
// model Result{
  
// }
// model Attendants{
  
// }
// model Event{
  
// }
// model Announcement{
  
// }
enum UserSex{
  Male
  Female
}
enum Day {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
}